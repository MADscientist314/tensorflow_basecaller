{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import csv\n",
    "import h5py\n",
    "import signal\n",
    "import fast5\n",
    "import fastq\n",
    "import re\n",
    "import matplotlib"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [],
   "source": [
    "\"\"\"\n",
    "this function divides the length of whatever \n",
    "size the list is by 4 for a 4mer\n",
    "\"\"\"\n",
    "def BaseFunction(x): \n",
    "    return(len(x)//4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "\"\"\"\n",
    "this function divides the length of whatever \n",
    "size the list is by 40 for a 40mer\n",
    "\"\"\"\n",
    "def SigFunction(x): \n",
    "    return(len(x)//40)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "\"\"\"\n",
    "this function provides information about the array    \n",
    "\"\"\"\n",
    "def array_inspect(x):\n",
    "    print (\"Shape is\",(x.shape))\n",
    "    print((\"Length is\",len(x)))\n",
    "    print((\"Dimension is\",x.ndim))\n",
    "    print((\"Total Size is\",x.size))\n",
    "    print((\"Type is\",x.dtype))\n",
    "    print((\"Type Name is\",x.dtype.name))\n",
    "    #print((\"Mean is\",(x).mean))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "\"\"\"\n",
    "this function normalizes the raw signal resistances\n",
    "from each read by dividing by the mean(or std?)\n",
    "\"\"\"\n",
    "def normalize(x,y):\n",
    "    z=np.divide(x,y)\n",
    "    #np.savetxt(\"NormalizedSigArray_{}.csv\".format(),(z), delimiter=\",\")\n",
    "    return z"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Shape is (55928,)\n",
      "('Length is', 55928)\n",
      "('Dimension is', 1)\n",
      "('Total Size is', 55928)\n",
      "('Type is', dtype('float64'))\n",
      "('Type Name is', 'float64')\n",
      "Shape is (54603,)\n",
      "('Length is', 54603)\n",
      "('Dimension is', 1)\n",
      "('Total Size is', 54603)\n",
      "('Type is', dtype('float64'))\n",
      "('Type Name is', 'float64')\n",
      "Shape is (10170,)\n",
      "('Length is', 10170)\n",
      "('Dimension is', 1)\n",
      "('Total Size is', 10170)\n",
      "('Type is', dtype('float64'))\n",
      "('Type Name is', 'float64')\n",
      "Shape is (31658,)\n",
      "('Length is', 31658)\n",
      "('Dimension is', 1)\n",
      "('Total Size is', 31658)\n",
      "('Type is', dtype('float64'))\n",
      "('Type Name is', 'float64')\n",
      "Shape is (2827,)\n",
      "('Length is', 2827)\n",
      "('Dimension is', 1)\n",
      "('Total Size is', 2827)\n",
      "('Type is', dtype('float64'))\n",
      "('Type Name is', 'float64')\n",
      "Shape is (53456,)\n",
      "('Length is', 53456)\n",
      "('Dimension is', 1)\n",
      "('Total Size is', 53456)\n",
      "('Type is', dtype('float64'))\n",
      "('Type Name is', 'float64')\n",
      "Shape is (11781,)\n",
      "('Length is', 11781)\n",
      "('Dimension is', 1)\n",
      "('Total Size is', 11781)\n",
      "('Type is', dtype('float64'))\n",
      "('Type Name is', 'float64')\n",
      "Shape is (25008,)\n",
      "('Length is', 25008)\n",
      "('Dimension is', 1)\n",
      "('Total Size is', 25008)\n",
      "('Type is', dtype('float64'))\n",
      "('Type Name is', 'float64')\n",
      "Shape is (9430,)\n",
      "('Length is', 9430)\n",
      "('Dimension is', 1)\n",
      "('Total Size is', 9430)\n",
      "('Type is', dtype('float64'))\n",
      "('Type Name is', 'float64')\n",
      "Shape is (56072,)\n",
      "('Length is', 56072)\n",
      "('Dimension is', 1)\n",
      "('Total Size is', 56072)\n",
      "('Type is', dtype('float64'))\n",
      "('Type Name is', 'float64')\n"
     ]
    }
   ],
   "source": [
    "\"\"\"\n",
    "The cell does the following:\n",
    "    1) Import the signal level data\n",
    "    2) Normalize it to the mean fof the signal\n",
    "    3) Appends the signal data from each read into a row of an array \n",
    "\"\"\"\n",
    "means = [] \n",
    "std = []\n",
    "sig = []\n",
    "for x in range(10):\n",
    "    a=np.loadtxt(\"signal/signal_{}.txt\".format(x)) # load the signal\n",
    "    m=a.mean() #obtain the average signal from the read\n",
    "    b=normalize(m,a) # divide each resistance by the average to normalize \n",
    "    sig.append(b)\n",
    "    #array_inspect(sig[x])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[55928], [54603], [10170], [31658], [2827], [53456], [11781], [25008], [9430], [56072]]\n"
     ]
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#subsample=[]\n",
    "#c = np.zeros((10,1))\n",
    "#print(c)\n",
    "#d = np.full((10,1),2)\n",
    "#print(d)\n",
    "#stride\n",
    "#for x in \n",
    "#if d.any()>c.any(): # I'm trying to divid the resistances in half every time and its not working...\n",
    "    #np.divide(b,d)\n",
    "#    b=c\n",
    "#    print(c)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
n"
     ]
    }
   ],
   "source": [
    "\"\"\"\n",
    "This cell does the following\n",
    "    1)Imports the bases\n",
    "    2)trims off the new lines and digits\n",
    "    3)converts them to a list\n",
    "    3)converts them to a code of 0123 instead of ATCG\n",
    "\"\"\"\n",
    "f = open(\"fasta/sampled_read.fasta\",\"r\") #opens the file with the reads\n",
    "a = f.read()\n",
    "b = (a.split(\">\", 11))\n",
    "base = [re.sub(\">|\\n|\\d\", \"\",str) for str in b]\n",
    "baseA0 = [re.sub(\"A\",\"0\",str) for str in base]\n",
    "baseT1 = [re.sub(\"T\",\"1\",str) for str in baseA0]\n",
    "baseG2 = [re.sub(\"G\",\"2\",str) for str in baseT1]\n",
    "base_coded = [re.sub(\"C\",\"3\",str) for str in baseG2]\n",
    "print(base_coded)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Shape is (8312,)\n",
      "('Length is', 8312)\n",
      "('Dimension is', 1)\n",
      "('Total Size is', 8312)\n",
      "('Type is', dtype('int32'))\n",
      "('Type Name is', 'int32')\n",
      "Shape is (8312,)\n",
      "('Length is', 8312)\n",
      "('Dimension is', 1)\n",
      "('Total Size is', 8312)\n",
      "('Type is', dtype('int32'))\n",
      "('Type Name is', 'int32')\n",
      "Shape is (1445,)\n",
      "('Length is', 1445)\n",
      "('Dimension is', 1)\n",
      "('Total Size is', 1445)\n",
      "('Type is', dtype('int32'))\n",
      "('Type Name is', 'int32')\n",
      "Shape is (4675,)\n",
      "('Length is', 4675)\n",
      "('Dimension is', 1)\n",
      "('Total Size is', 4675)\n",
      "('Type is', dtype('int32'))\n",
      "('Type Name is', 'int32')\n",
      "Shape is (437,)\n",
      "('Length is', 437)\n",
      "('Dimension is', 1)\n",
      "('Total Size is', 437)\n",
      "('Type is', dtype('int32'))\n",
      "('Type Name is', 'int32')\n",
      "Shape is (5776,)\n",
      "('Length is', 5776)\n",
      "('Dimension is', 1)\n",
      "('Total Size is', 5776)\n",
      "('Type is', dtype('int32'))\n",
      "('Type Name is', 'int32')\n",
      "Shape is (1812,)\n",
      "('Length is', 1812)\n",
      "('Dimension is', 1)\n",
      "('Total Size is', 1812)\n",
      "('Type is', dtype('int32'))\n",
      "('Type Name is', 'int32')\n",
      "Shape is (3766,)\n",
      "('Length is', 3766)\n",
      "('Dimension is', 1)\n",
      "('Total Size is', 3766)\n",
      "('Type is', dtype('int32'))\n",
      "('Type Name is', 'int32')\n",
      "Shape is (1407,)\n",
      "('Length is', 1407)\n",
      "('Dimension is', 1)\n",
      "('Total Size is', 1407)\n",
      "('Type is', dtype('int32'))\n",
      "('Type Name is', 'int32')\n",
      "Shape is (8312,)\n",
      "('Length is', 8312)\n",
      "('Dimension is', 1)\n",
      "('Total Size is', 8312)\n",
      "('Type is', dtype('int32'))\n",
      "('Type Name is', 'int32')\n",
      "[array([1, 2, 1, ..., 1, 3, 1]), array([2, 2, 1, ..., 2, 0, 2]), array([3, 1, 3, ..., 1, 2, 1]), array([0, 0, 2, ..., 2, 1, 0]), array([2, 3, 3, 2, 1, 1, 1, 0, 3, 0, 1, 1, 3, 0, 0, 3, 2, 1, 1, 0, 2, 1,\n",
      "       2, 1, 1, 2, 0, 2, 0, 1, 2, 1, 2, 0, 2, 2, 1, 0, 3, 1, 0, 1, 1, 3,\n",
      "       1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 2, 3, 1, 0, 2, 1, 1, 2, 1, 3, 1, 2,\n",
      "       0, 0, 1, 0, 3, 2, 1, 1, 2, 1, 1, 1, 1, 1, 3, 3, 0, 1, 1, 2, 1, 2,\n",
      "       1, 1, 2, 3, 1, 2, 1, 1, 1, 1, 0, 1, 0, 2, 0, 3, 3, 0, 1, 2, 1, 2,\n",
      "       0, 2, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 2, 2, 0, 2, 2, 1, 1,\n",
      "       3, 1, 0, 1, 1, 1, 1, 2, 2, 1, 2, 1, 0, 1, 1, 1, 3, 3, 0, 1, 2, 1,\n",
      "       1, 1, 1, 2, 1, 1, 1, 3, 2, 0, 2, 0, 1, 1, 1, 0, 2, 0, 0, 1, 1, 3,\n",
      "       3, 1, 1, 1, 1, 0, 2, 1, 0, 2, 1, 1, 3, 1, 1, 2, 1, 0, 2, 1, 2, 3,\n",
      "       3, 2, 2, 3, 1, 1, 2, 2, 1, 0, 0, 1, 2, 2, 1, 2, 0, 0, 1, 1, 3, 1,\n",
      "       3, 1, 3, 0, 2, 3, 0, 1, 1, 1, 2, 1, 3, 1, 2, 1, 3, 1, 2, 0, 0, 0,\n",
      "       0, 0, 2, 0, 3, 1, 0, 1, 1, 1, 3, 1, 3, 3, 1, 1, 3, 0, 1, 1, 1, 0,\n",
      "       1, 2, 0, 0, 2, 3, 1, 1, 0, 2, 1, 1, 1, 1, 2, 3, 1, 2, 2, 0, 1, 0,\n",
      "       3, 0, 0, 0, 0, 1, 1, 3, 1, 1, 2, 2, 3, 1, 2, 0, 1, 0, 0, 1, 1, 0,\n",
      "       1, 1, 1, 1, 2, 1, 1, 1, 0, 0, 2, 2, 0, 2, 2, 3, 1, 0, 0, 0, 2, 0,\n",
      "       1, 0, 2, 2, 0, 3, 3, 3, 3, 0, 1, 1, 3, 3, 1, 1, 1, 3, 1, 0, 2, 3,\n",
      "       1, 1, 2, 1, 0, 2, 1, 2, 1, 1, 1, 3, 1, 2, 3, 1, 2, 0, 2, 0, 0, 0,\n",
      "       1, 3, 1, 2, 3, 1, 2, 1, 1, 0, 0, 1, 2, 1, 2, 0, 1, 0, 2, 2, 1, 1,\n",
      "       1, 1, 1, 3, 1, 1, 1, 3, 0, 3, 3, 3, 1, 0, 0, 1, 2, 3, 1, 1, 1, 1,\n",
      "       2, 3, 3, 1, 1, 0, 1, 2, 3, 3, 1, 3, 1, 1, 0, 0, 2, 0, 1]), array([0, 2, 3, ..., 2, 1, 1]), array([1, 3, 3, ..., 0, 1, 2]), array([1, 1, 1, ..., 3, 0, 1]), array([2, 3, 3, ..., 2, 0, 2]), array([2, 0, 0, ..., 1, 1, 0])]\n"
     ]
    }
   ],
   "source": [
    "\"\"\"\n",
    "The purpose of this code is the following\n",
    "1)Convert the coded reads to a 2D Array with ea\n",
    "2)to resize the reads to be 4mers\n",
    "*******Array Reads is now and array of 2D arrays of each read\n",
    "\"\"\"\n",
    "reads=[]\n",
    "for x in range(10):#len(base_coded)):\n",
    "    l=list(int (i) for i in base_coded[x])\n",
    "    d=np.asarray(l)\n",
    "    #d.resize((len(l)),4)\n",
    "    #print(d)\n",
    "    reads.append(d)\n",
    "    array_inspect(reads[x])\n",
    "print(reads)    \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\"\"\"\n",
    "the purpose of this cell is to \n",
    "\"\"\"\n",
    "#d.resize((len(l)),4)\n",
    "    #print(d)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\"\"\"\n",
    "Any cell under this cell is trash code or experimental\n",
    "\"\"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "reads=[]\n",
    "for x in range(0):#len(base_coded)):\n",
    "    l=list(int (i) for i in base_coded[x])\n",
    "    d=np.asarray(l)\n",
    "    d.resize(BaseFunction(l),4)\n",
    "    BaseFunction(l)\n",
    "    reads.append(d)\n",
    "#reads=np.array(2078,4,1)\n",
    "array_inspect(d)\n",
    "print(d)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#np.concatenate((sig,base_array), axis=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "base_transpose = np.transpose(base_array) # you cant transpose a 1d arry into a 1d array but I was trying to append it to have the resistances>\n",
    "base_transpose.T\n",
    "base_transpose.shape\n",
    "#for x in range(10):\n",
    "    #print(\"base_array\"(a))\n",
    " #   print(len(base_array[x]))\n",
    "    #print(\"base_transpose length is:\")\n",
    "  #  print(len(base_transpose[x]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#for x,y in enumerate(base):\n",
    "    #print(np.array(data[x]).shape)\n",
    "#    print(np.array(data[x]).size, data[x].ndim, data[x].dtype)# gets the  number of resistances from each signal"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "for x in range(10):\n",
    "    print (x)\n",
    "    a= \"signal_\"(x)\".txt\"\n",
    "    print(a)\n",
    "    #np.loadtxt(\"signal/signal_(x).txt\") #load the signal level data into the module"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "a = []\n",
    "for x,y in enumerate(sig):\n",
    "    b=[np.array(sig[x]).size]\n",
    "       #, sig[x].ndim, sig[x].dtype)# gets the  number of resistances from each signal\n",
    "    a.append(b)\n",
    "print(a)\n",
    "        \n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
